name: "Spack Build-Cache"
description: "Install via Spack, push buildcache to a mirror"
branding:
  icon: package
  color: purple

inputs:
  environment:
    description: "Relative path to the Spack environment (e.g. `.`)."
    required: true
    default: ".spack/default"

  load-environment:
    description: "Whether the Spack environment should be loaded to subsequent steps."
    required: false
    default: "true"

  token:
    description: "OCI token to use for pushing the packages."
    required: false
    default: "${{ github.token }}"

  mirror:
    description: "OCI registry to push the packages to."
    required: false
    default: "oci://ghcr.io/${{ github.repository }}"

  base-image:
    description: "Image name to attach to the packages, to use them as standalone containers."
    required: false

  force:
    description: "Force push packages into the registry."
    required: false
    default: "false"

  log-name:
    description: "If not empty, upload the build logs with the following name."
    required: false
    default: ""

  print-logs:
    description: "Whether to show the build logs for spack install."
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: Configure Spack
      shell: spack-bash {0}
      run: |
        spack bootstrap now

        spack \
          mirror add \
          --scope site \
          --unsigned \
          --oci-username ${{ github.repository_owner }} \
          --oci-password ${{ inputs.token }} \
          buildcache-numpex \
          ${{ inputs.mirror }}

        spack compiler find --scope site

        # Sane defaults
        spack config --scope site add config:install_tree:root:/opt/root
        spack config --scope site add config:install_tree:padded_length:128

    - name: Install Spack environment
      shell: spack-bash {0}
      run: |
        spack \
          -e "${{ inputs.environment }}" \
          install \
          $([[ "${{ inputs.print-logs }}" == "true" ]] && echo -vv) \
          --log-format junit \
          --log-file /tmp/spack-log

    - uses: actions/upload-artifact@v4
      name: Upload logs
      if: ${{ inputs.log-name != '' }}
      with:
        name: ${{ inputs.log-name }}
        path: /tmp/spack-log.xml
        overwrite: true

    - name: Automatically load environment
      if: ${{ inputs.load-environment == 'true' }}
      shell: spack-bash {0}
      run: |
        env_file="/tmp/spack-env"
        spack env activate "${{ inputs.environment }}" --sh > "$env_file"
        while IFS= read -r line; do
          if [[ "$line" =~ ^export\ (.*)=(.*)\;$ ]]; then
            exporting="${BASH_REMATCH[1]}=${BASH_REMATCH[2]}"
            echo ":: exporting $exporting"
            echo "$exporting" >> "$GITHUB_ENV"
          fi
        done < "$env_file"
        rm -f "$env_file"

    - name: Push to cache
      shell: spack-bash {0}
      run: |
        spack -e "${{ inputs.environment }}" buildcache \
          push \
          --update-index \
          --with-build-dependencies \
          $([[ -n "${{ inputs.base-image }}" ]] && echo --base-image "${{ inputs.base-image }}") \
          $([[ "${{ inputs.force }}" == "true" ]] && echo --force) \
          buildcache-numpex

